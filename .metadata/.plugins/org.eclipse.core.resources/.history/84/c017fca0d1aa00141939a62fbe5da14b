package PotagerModel;

import java.util.ArrayList;
import java.util.LinkedList;

public class Plantation {

	private ArrayList<Planche> planches;
	private Jardin jardin;
	private Plante[] aPlanter;
	
	public Plantation(Jardin jardin) {
		this.jardin = jardin;
		// TODO Auto-generated constructor stub
	}

	/**
	 * @return the planches
	 */
	public ArrayList<Planche> getPlanches() {
		return planches;
	}

	/**
	 * @param planches the planches to set
	 */
	public void setPlanches(ArrayList<Planche> planches) {
		this.planches = planches;
	}

	/**
	 * @return the jardin
	 */
	public Jardin getJardin() {
		return jardin;
	}

	/**
	 * @param jardin the jardin to set
	 */
	public void setJardin(Jardin jardin) {
		this.jardin = jardin;
	}
	
	/**
	 * @return the aPlanter
	 */
	public Plante[] getaPlanter() {
		return aPlanter;
	}

	/**
	 * @param aPlanter the aPlanter to set
	 */
	public void setaPlanter(Plante[] aPlanter) {
		this.aPlanter = aPlanter;
	}

	
	/* A optimiser */
	public void algoGlouton(){
		/* Initialisation */
		int maxX = this.jardin.getTerrain().length;
		int maxY = this.jardin.getTerrain()[0].length;
		int aleaX = (int)(Math.random() * (maxX + 1));
		int aleaY = (int)(Math.random() * (maxY + 1));
		this.jardin.getTerrain()[aleaX][aleaY].getCulture().setPlante(this.getaPlanter()[0]);
		//faire avec les planches
		
		int cpt = 1;
		/* algo*/

			LinkedList<CaseTerrain> voisins = this.jardin.voisinsCase(aleaX, aleaY);
			/* Tant que toutes les cases ne sont pas remplies */
			while(cpt != this.jardin.getTerrain().length*this.jardin.getTerrain()[0].length){
				/* Pour chaque voisin, on calcule le score max */
			for (CaseTerrain caseTerrain : voisins) {
				if(caseTerrain.getCulture().getPlante() == null){
					int score = -8;
					int scoreTmp;
					Plante plante = this.aPlanter[0];
					for (Plante aPlanter : this.aPlanter) {
						scoreTmp = caseTerrain.getJardin().scoreCase(aPlanter,caseTerrain.getX(), caseTerrain.getY());
						if (scoreTmp < score){
							score = scoreTmp;
							plante = aPlanter;
						}
					}
					caseTerrain.getCulture().setPlante(plante);
					cpt++;
				}
				voisins.addAll(caseTerrain.getJardin().voisinsCase(caseTerrain.getX(), caseTerrain.getY()));
			}
		}
	}

}
